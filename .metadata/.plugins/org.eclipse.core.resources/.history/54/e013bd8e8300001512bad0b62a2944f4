package jumpingalien.part3.tests;

import static jumpingalien.tests.util.TestUtils.spriteArrayForSize;
import static org.junit.Assert.*;

import java.util.HashMap;
import java.util.Map;

import jumpingalien.model.Buzam;
import jumpingalien.model.Mazub;
import jumpingalien.model.Plant;
import jumpingalien.model.World;
import jumpingalien.model.program.Program;
import jumpingalien.model.program.expression.*;
import jumpingalien.model.program.expression.binary.*;
import jumpingalien.model.program.statement.*;
import jumpingalien.model.program.type.*;
import jumpingalien.model.program.type.Object;
import jumpingalien.part3.programs.SourceLocation;
import jumpingalien.part3.programs.IProgramFactory.Direction;

import org.junit.Before;
import org.junit.Test;

public class StatementTest {

	private SourceLocation loc = new SourceLocation(0, 0);
	
	private static World worldStandard;
	
	private static Mazub mazub;
	
	private static Buzam buzam1;
	
	private static Buzam buzam2;
	
	private static Plant plant1;
	
	private static Program program1;
	
	private static Program program2;
	
	@Before
	public void setUpMutableFixture(){
		worldStandard = new World(70, 300, 300, 500, 500, 150, 150);
		for (int i = 0; i <= 299; i++){
			worldStandard.setGeoFeatureAtWithInt(i, 0, 1);
			worldStandard.setGeoFeatureAtWithInt(0, i, 1);
			worldStandard.setGeoFeatureAtWithInt(299, i, 2);
		}
		plant1 = new Plant(500, 100, spriteArrayForSize(10, 10));
		mazub = new Mazub(100, 100, spriteArrayForSize(10, 10));
		Map<String,Type<?>> globalVariables1 = new HashMap<>();
		globalVariables1.put("t", new Object(null));
		//mainStatement1 has an error
		Expression<DirectionType> expressionRight = new ExpressionBasic<DirectionType>(
				new DirectionType(Direction.RIGHT), loc);
		Statement subStatement1a = StartRun(expressionRight)
		Expression<DoubleType> tilePos = new ExpressionBasic<DoubleType>(new DoubleType(0.0), loc);
		Statement subStatement1y = new Assignment<Object>("t", new GetTile(tilePos,tilePos,loc), 
				loc, new Object(null));
		Statement mainStatement1 = new StatementSequence();
		//mainStatement2 is correct
		program1 = new Program(mainStatement1, globalVariables1);
		program2 = new Program(mainStatement2, globalVariables2);
		buzam1 = new Buzam(1000, 100, spriteArrayForSize(10, 10), program1);
		buzam2 = new Buzam(3000, 100, spriteArrayForSize(10, 10), program2);
		worldStandard.addMazub(mazub);
		worldStandard.addAsObject(buzam1);
		worldStandard.addAsObject(buzam2);
		worldStandard.addAsObject(plant1);
	}
	
	@Test
	public void workingProgramTest(){
		
	}
	
	@Test
	public void failedProgramTest(){
		
	}

}
