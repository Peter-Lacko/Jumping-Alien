package jumpingalien.model.program.statement;

import java.util.Iterator;
import java.util.NoSuchElementException;

import jumpingalien.model.program.expression.Expression;
import jumpingalien.model.program.type.DoubleType;
import jumpingalien.part3.programs.SourceLocation;
import jumpingalien.util.Util;

public class Wait extends ActionStatement {

	//moet did een double of een expression zijn?
	public Wait(Expression<DoubleType> expression, SourceLocation sourceLocation){
		super(sourceLocation);
		this.expression = expression;
		expression.setStatement(this);
	}
	
	private final Expression<DoubleType> expression;
	
	public Expression<DoubleType> getExpression() {
		return expression;
	}

	private Wait getWait(){
		return this;
	}
	
	private double timeToWait = 0.001;
	
	public double getTimeToWait() {
		return timeToWait;
	}

	public void setTimeToWait(double timeToWait) {
		this.timeToWait = timeToWait;
	}

	@Override
	public Iterator<Statement> iterator() {
		return new Iterator<Statement>(){

			@Override
			public boolean hasNext() {
				
			}

			@Override
			public Wait next() throws NoSuchElementException{
				if (! hasNext())
					throw new NoSuchElementException();
				index++;
				return getWait();
			}
			
			private int index = 0;
			
			private int iterations = (int) ((getExpression().compute().getValue()/0.001)+1);
		};
	}

	@Override
	public void execute() {
		
	}

}
