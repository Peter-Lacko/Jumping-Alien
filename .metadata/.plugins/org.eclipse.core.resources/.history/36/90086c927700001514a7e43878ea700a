package jumpingalien.model.program.expression.binary;

import jumpingalien.model.Tile;
import jumpingalien.model.program.expression.Expression;
import jumpingalien.model.program.type.*;
import jumpingalien.model.program.type.Object;
import jumpingalien.part3.programs.SourceLocation;

public class GetTile extends Binary<DoubleType,DoubleType,Object>{

	public GetTile(Expression<DoubleType> operand1, Expression<DoubleType> operand2, 
			SourceLocation sourceLocation) {
		super(operand1, operand2,sourceLocation);
	}

	@Override
	public Object compute() {
		int[] pos =this.getStatement().getProgram().getWorld().getPixelOfTileContaining
				((this.getOperand1().compute().getValue().intValue()), this.getOperand2().compute().getValue().intValue());
			for (Tile tile : this.getStatement().getProgram().getWorld().getTiles()){
			System.out.println(tile.getPosition()[0]+","+tile.getPosition()[1]);
			System.out.println(pos[0]+ "," +pos[1]);
			if (tile.getPosition().equals(pos)){
				System.out.println("a");
				return new Object(tile);
			}
		}
		return new Object(null);
	}

}
