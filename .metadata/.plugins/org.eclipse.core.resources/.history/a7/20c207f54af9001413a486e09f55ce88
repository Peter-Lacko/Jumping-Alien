package jumpingalien.model;

import jumpingalien.util.Sprite;
import jumpingalien.util.Util;
import be.kuleuven.cs.som.annotate.*;

public abstract class Aliens extends Characters {

	public Aliens(int x_pos, int y_pos, Sprite[] sprites, double hor_acc, double max_hor_vel, 
			double init_hor_vel, double init_ver_vel, int hitpoints)
			throws IllegalArgumentException {
		super(x_pos, y_pos, sprites, hor_acc, max_hor_vel, init_hor_vel, init_ver_vel, hitpoints);
	}
	
	@Override
	public Sprite leftOrRightSprite(int number) {
		// TODO Auto-generated method stub
		return null;
	}

	/**
	 * A method that returns the Sprite for the character with its current variables.
	 * @return The new Sprite is determined depending on the state of the character.
	 * 			if the character is in the air and has moved in the last second and is not ducked,
	 * 			return the correct sided sprite for this case. Otherwise, if the character is ducked and 
	 * 			has moved in the last second, return the correct sided sprite for this case. Otherwise,
	 * 			if the character has move in the last second, return the correct sided (walking/ running 
	 * 			cycle) sprite for this case. otherwise, if the character is ducked and has not moved
	 * 			in the last second, return the correct sprite for this case. Otherwise, return the last
	 * 			available sprite.
	 */
	@Override
	public Sprite getCurrentSprite(){
		if ((isFalling()) && (this.getHasMovedIn() != MovementDirection.NONE) && (! isDucked())){
			return leftOrRightSprite(4);
		} else if ((isDucked()) && (this.getHasMovedIn() != MovementDirection.NONE)){
			return leftOrRightSprite(6);
		} else if (this.getHasMovedIn() != MovementDirection.NONE){
			return getCurrentWalkCycleSprite();
		} else if ((isDucked()) && (this.getHasMovedIn() == MovementDirection.NONE)){
			return getImageAt(2);
		} else{
			return getImageAt(1);
		}
	}

	@Override
	public boolean canHaveAsIndex(int index) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean isValidNbImages(int nbImages) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean collide(Characters other) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public void collision(Characters other) {
		// TODO Auto-generated method stub

	}

	@Override
	public void collisionNoDamageFrom(Characters other) {
		// TODO Auto-generated method stub

	}

	@Override
	public void collisionNoDamageTo(Characters other) {
		// TODO Auto-generated method stub

	}

}
