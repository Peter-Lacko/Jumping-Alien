import be.kuleuven.cs.som.annotate.*;


/**
 * @author Peter Lacko, Sander Switsers
 *
 */
public class Mazub {
	
	/**
	 * Return the number of coordinates ascribed to this character.
	 * @throws NullPointerException
	 * 			Null is not a valid array for the Position
	 * 			| this.Position == null
	 */
	@Basic @Immutable
	//er staat als coding rule dat dit erbij moet, maar Position heeft altijd lengte 2?
	public int getNbPosition() throws NullPointerException {
	// Dit moet defensief zijn. Als Position null is, zal het een NullPointerException gooien.
		return Position.length;
	}
	
	/**
	 * Check whether the number of coordinates is valid for any character.
	 * 
	 * @param nbPosition
	 * 			The number of coordinates to check.
	 * @return True if and only if the given number of coordinates is 2 (the game takes place in a 2D plane)
	 * 			| result == (nbPosition == 2)
	 */
	public static boolean isValidNbPosition(int nbPosition){
		return (nbPosition == 2);
	}
	
	/**
	 * Return the position for this Mazub character.
	 * 	The position gives a combination of the X and Y position of the bottom left corner of the character.
	 */
	@Basic
	public int[] getPosition() {
		return this.Position.clone();
	}
	
	/**
	 * Return the coordinate ascribed to this character at the given index.
	 * @param index
	 * 			The index of coordinate to return (X-coordinate is at the first index, Y-coordinate is at 
	 * 			the second index)
	 * @throws ArrayIndexOutOfBoundsException
	 * 			The given index must be positive and may not be bigger than 2.
	 * 			| (index <= 0) || (index > 2)
	 */
	public int getPositionAt(int index) throws ArrayIndexOutOfBoundsException{
		return Position[index-1];
	}
	
	public static boolean isValidPositionAt (int coordinate, int index) {
		if ((index == 1) && (coordinate >= X_MIN) && (coordinate <= X_MAX))
			return true;
		if ((index ==2) && (coordinate >= Y_MIN) && (coordinate <= Y_MAX))
			return true;
		return false;			
	}
		
	/**
	 * Variable registering the position of the bottom left corner of the Mazub Sprite.
	 */
	private int[] Position = new int[2];
	
	private static final int[] FIELD_SIZE = {1024, 768};
	
	private static final int X_MAX = FIELD_SIZE[0]-1;
	
	private static final int Y_MAX = FIELD_SIZE[1]-1;
	
	private static final int X_MIN = 0;
	
	private static final int Y_MIN = 0;
	/**
	 * Return the orientation of the Mazub character.
	 * 	The orientation is the direction Mazub is facing or moving.
	 */
	@Basic
	public String getOrientation() {
		return this.Orientation;
	}
	
	/**
	 * Variable registering the orientation of the Mazub character.
	 */
	private String Orientation;
	
	/**
	 * 
	 * @return
	 */
	public Double getHorizontalVelocity() {
		return this.HorizontalVelocity;
	}
	
	private Double HorizontalVelocity;
	
	public Double getHorizontalAcceleration() {
		return this.HORIZONTAL_ACCELERATION;
	}
	
	//moeten deze public of private zijn?
	public final Double INIT_HORIZONTAL_VELOCITY = 1.0;
	
	public final Double MAX_HORIZONTAL_VELOCITY = 3.0;
	
	public static final Double HORIZONTAL_ACCELERATION = 0.9;
	
	public void startMove(String direction) {
		int direction_number = 1;
		if (direction == "left")
			direction_number = -1;
		
	}

}
